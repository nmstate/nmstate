name: CI

on:
  pull_request:
   types: [opened, synchronize, reopened]

jobs:
  rust_lint:
    strategy:
      fail-fast: true
      matrix:
        include:
          - rust_version: "stable"
          - rust_version: "nightly"

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust ${{ matrix.rust_version }}
      run: |
        rustup override set ${{ matrix.rust_version }}
        rustup update ${{ matrix.rust_version }}
        rustup component add rustfmt clippy


    - name: Check fmt
      if: matrix.rust_version == 'stable'
      run: cd rust && cargo fmt -- --check

    - name: Check clippy
      if: matrix.rust_version == 'nightly'
      run: cd rust && cargo clippy -- -D warnings

  rust_unit:
    strategy:
      fail-fast: true
      matrix:
        include:
          - rust_version: "stable"
          - rust_version: "nightly"
          - rust_version: "beta"

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust ${{ matrix.rust_version }}
      run: |
        rustup override set ${{ matrix.rust_version }}
        rustup update ${{ matrix.rust_version }}

    - name: Unit test
      run: cd rust && cargo test -- --test-threads=1 --show-output

  rpm_build:
    runs-on: ubuntu-latest
    needs: [rust_lint, py_lint]
    steps:
      - uses: actions/checkout@v3
      - name: build nmstate rpm
        run: .github/workflows/build_rpm.sh
      - uses: actions/upload-artifact@v3
        with:
          name: rpms
          path: rpms/
          retention-days: 5

  py_lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        include:
          - job_type: "c8s-nm_stable-format"
          - job_type: "c8s-nm_stable-lint"
    steps:
      - uses: actions/checkout@v3

      - name: Run tests
        run: .github/workflows/run_test.sh ${{ matrix.job_type }}

  py_unit:
    runs-on: ubuntu-latest
    needs: rpm_build
    strategy:
      fail-fast: false
      matrix:
        include:
          - job_type: "c8s-nm_stable-unit_py36"
    steps:
      - uses: actions/checkout@v3
      - name: Download compiled rpm
        uses: actions/download-artifact@v3
        with:
          name: rpms
          path: rpms/
      - name: Run tests
        run: .github/workflows/run_test.sh ${{ matrix.job_type }}

  integ:
    runs-on: ubuntu-latest
    needs: rpm_build
    strategy:
      fail-fast: false
      matrix:
        include:
          - job_type: "c8s-nm_stable-integ_tier1"
          - job_type: "c8s-nm_stable-integ_tier2"
          - job_type: "c8s-nm_stable-integ_slow"
          - job_type: "c8s-nm_stable-rust_go"
          - job_type: "c8s-nm_main-integ_tier1"
          - job_type: "c8s-nm_main-integ_tier2"
          - job_type: "c8s-nm_main-integ_slow"
          - job_type: "c8s-nm_main-rust_go"
          - job_type: "c8s-nm_1_36-integ_tier1"
          - job_type: "c8s-nm_1_36-integ_tier2"
          - job_type: "c8s-nm_1_36-integ_slow"
          - job_type: "c8s-nm_1_36-rust_go"
          - job_type: "ovs2_11-nm_stable-integ_tier1"
    steps:
      - uses: actions/checkout@v3

      - name: Enable openvswitch kernel module
        run: sudo modprobe openvswitch

      - name: Download compiled rpm
        uses: actions/download-artifact@v3
        with:
          name: rpms
          path: rpms/

      - name: Run tests
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: .github/workflows/run_test.sh ${{ matrix.job_type }}

      - name: Set artifacts permissions
        if: ${{ failure() }}
        run: sudo chmod 777 test_artifacts/*

      - uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        with:
          name: nmstate-test-artifact-${{ matrix.job_type }}
          path: test_artifacts/
          retention-days: 5
