---
dist: bionic
language: generic
env:
    global:
        - use_codecov=true
    matrix:
        - testflags="--el8 --test-type integ --pytest-args='-x'"
          use_codecov=false
          use_coveralls=true
        - testflags="--el8 --test-type integ --pytest-args='-x'
              --copr networkmanager/NetworkManager-1.22-git"
        - testflags="--el8 --test-type integ --pytest-args='-x'
              --copr networkmanager/NetworkManager-master"
        - testflags="--test-type integ --pytest-args='-x'"
        - testflags="--test-type format"
        - testflags="--test-type lint"
        - testflags="--test-type unit_py36"
        - testflags="--test-type unit_py37"
        - testflags="--test-type unit_py38"

matrix:
    allow_failures:
        - env: testflags="--el8 --test-type integ --pytest-args='-x'
                   --copr networkmanager/NetworkManager-master"
        - env: testflags="--el8 --test-type integ --pytest-args='-x'
                   --copr networkmanager/NetworkManager-1.22-git"
        - env: testflags="--test-type integ --pytest-args='-x'"

addons:
    apt:
        packages:
            - git
            - gnupg2
            - openssh-client
            - python-tox
            - xz-utils

services:
    - docker

script:
    - sudo modprobe openvswitch
    - ./automation/run-tests.sh $testflags

after_success:
    - sudo pip install coveralls codecov
    - sudo mv .coverage .coverage.orig || true
    - sudo mv tests/.coverage .coverage.tox || true
    - sudo coverage combine --append .
    - test "${use_coveralls}" == "true" && coveralls || true
    - test "${use_codecov}" == "true" && codecov || true

after_failure:
    - ./automation/upload_test_artifacts.sh
